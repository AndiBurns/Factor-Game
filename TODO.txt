Get the rest of the game working
NO LONGER TRUE Currently, only the modal that lets the user change the Magic Number is moderately functional
DONE  Get its footer buttons working
DONE Include code to generate prime factorization of magic number. Include toggle for user to see this.
DONE Create a list of all factors of the Magic Number in the middle of the page.
  Scrollable, if necessary
DONE  Clickable - this is how you play
NOT DOING   animate slashing of eliminated numbers
DONE   animate color change from black to red/green as numbers are chosen/eliminated
NOT DOING  Show slashes (red & green, for comp & human) through the numbers already eliminated
DONE  Show eliminated numbers in red/green
  Some kind of messages when choosing 1
DONE   Normal game over when it's a forced choice
   Warning that you can choose another number and keep playing if it's not forced yet
NOT DOING, THEY CAN CLICK THE BUTTON THEMSELVES   Pop up the same modal again? For a new game.
 Rules panel on far right
DONE  Add rules text
  About button at bottom
  Settings button - adjust animation time?

Get the code... better
 Refactor? Generally, this is a never-ending pursuit. Don't prioritize.
  All of my React components are classes. Do I need that power for all of them? Should some just be functions?
  There are cases where it discovers a known prime without discovering all primes up to that number (the final n value in factorization)
   Good idea to build a list of these, so that IF they ever get checked by ensureEnoughKnownPrimes, they're already known to be prime?
    Neat idea, honestly seems like more trouble than value. IF I get around to implementing it, run some performance tests with & without
 More comments? Less comments? Review for readability.
 Precompile scripts so that Babel doesn't need to run every time
 Use production-ready React build
 Separate into .html and .js (and .css?) files